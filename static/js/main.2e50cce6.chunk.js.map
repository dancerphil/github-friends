{"version":3,"sources":["echarts/Graph.module.css","github-api/index.ts","region/utils.ts","region/index.ts","echarts/getOptions.ts","echarts/Graph.tsx","App.tsx","reportWebVitals.ts","index.tsx","App.module.css"],"names":["module","exports","client","getClient","getUserApi","id","user","apiGetInfo","a","infoAsync","info","apiGetFollowers","page","followersAsync","per_page","list","map","item","login","apiGetFollowing","followingAsync","forceUpdateRegion","createRegion","forceUpdate","set","v","useForceUpdate","useValue","optionRegion","follow","moreThanOne","all","getOption","getValue","useOption","handleFollowChange","e","target","checked","state","handleMoreThanOneChange","handleAllChange","currentPromise","Promise","resolve","addTask","task","onFulfilled","setTimeout","then","entities","getFollowers","_","followersList","filter","getFollowing","followingList","getProgressDescription","followers","following","length","percent","toFixed","infoCount","num","sum","friends","forEach","friendId","Math","min","maxFollowPage","friendsLength","initUser","loadUserFollow","followersPage","ceil","followingPage","appendFollowers","insertFollowers","appendFollowing","insertFollowing","max","start","callback","categories","chart","Graph","nodes","links","ref","useRef","useLayoutEffect","current","init","useEffect","options","node","name","legend","data","series","type","layout","animation","label","position","formatter","draggable","force","edgeLength","repulsion","gravity","edges","getOptions","setOption","className","c","container","Main","category","option","push","fixed","source","friendInfo","friendFriendId","find","includes","link","getNodesAndLinks","Description","description","Line","children","line","App","useState","setCurrent","value","setValue","handleChange","useCallback","handleClick","handleEnter","code","context","disabled","onChange","htmlFor","placeholder","onKeyDown","button","onClick","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2GACAA,EAAOC,QAAU,CAAC,UAAY,2B,4XCGxBC,EAASC,iBAAU,4CAEZC,EAAa,SAACC,GACvB,IAAMC,EAAOJ,EAAOI,KAAKD,GAazB,MAAO,CACHE,WAbY,uCAAG,gCAAAC,EAAA,sEACMF,EAAKG,YADX,0CACRC,EADQ,uBAERA,GAFQ,2CAAH,qDAcZC,gBAViB,uCAAG,8CAAAH,EAAA,6DAAOI,EAAP,+BAAc,EAAd,SACCN,EAAKO,eAAe,CAACD,OAAME,SAAU,MADtC,0CACbC,EADa,uBAEbA,EAAKC,KAAI,SAAAC,GAAI,OAAIA,EAAKC,UAFT,2CAAH,qDAWjBC,gBAPiB,uCAAG,8CAAAX,EAAA,6DAAOI,EAAP,+BAAc,EAAd,SACCN,EAAKc,eAAe,CAACR,OAAME,SAAU,MADtC,0CACbC,EADa,uBAEbA,EAAKC,KAAI,SAAAC,GAAI,OAAIA,EAAKC,UAFT,2CAAH,uD,SCdnBG,EAAoBC,uBAAa,GAE1BC,EAAc,kBAAMF,EAAkBG,KAAI,SAAAC,GAAC,OAAIA,EAAI,MAEnDC,EAAiBL,EAAkBM,SAQ1CC,EAAeN,uBAAqB,CACtCO,QAAQ,EACRC,aAAa,EACbC,KAAK,IAGIC,EAAYJ,EAAaK,SAEzBC,EAAYN,EAAaD,SAEzBQ,EAAqB,SAACC,GAC3BA,EAAEC,OAAOC,QACTV,EAAaJ,KAAI,SAAAe,GAAK,MAAK,CAACV,QAAQ,EAAMC,YAAaS,EAAMT,YAAaC,KAAK,MAE/EH,EAAaJ,KAAI,SAAAe,GAAK,MAAK,CAACV,QAAQ,EAAOC,YAAaS,EAAMT,YAAaC,KAAK,OAI3ES,EAA0B,SAACJ,GAChCA,EAAEC,OAAOC,QACTV,EAAaJ,KAAI,SAAAe,GAAK,MAAK,CAACV,OAAQU,EAAMV,OAAQC,aAAa,EAAMC,KAAK,MAE1EH,EAAaJ,KAAI,SAAAe,GAAK,MAAK,CAACV,OAAQU,EAAMV,OAAQC,aAAa,EAAOC,KAAK,OAItEU,EAAkB,SAACL,GACxBA,EAAEC,OAAOC,QACTV,EAAaJ,KAAI,SAAAe,GAAK,MAAK,CAACV,QAAQ,EAAMC,aAAa,EAAMC,KAAK,MAElEH,EAAaJ,KAAI,SAAAe,GAAK,MAAK,CAACV,QAAQ,EAAMC,aAAa,EAAMC,KAAK,OCpCtEW,EAAiBC,QAAQC,UAGvBC,EAAU,SAACC,GACb,IAAMC,EAAc,kBAAM,IAAIJ,SAAc,SAAAC,GACxCI,YAAW,WACPJ,EAAQE,OATH,QAYbJ,EAAiBA,EAAeO,KAAKF,EAAaA,IAchDG,EAAsB,GAEtBC,EAAe,SAAC9C,GAElB,OADkB+C,UAAUF,EAAS7C,GAAIgD,eAAeC,QAAO,SAAArC,GAAI,OAAIA,MAIrEsC,EAAe,SAAClD,GAElB,OADkB+C,UAAUF,EAAS7C,GAAImD,eAAeF,QAAO,SAAArC,GAAI,OAAIA,MAgD9DwC,EAAyB,SAACpD,GACnC,IAAK6C,EAAS7C,GACV,MAAO,wBAEX,IAAMqD,EAAYP,EAAa9C,GACzBsD,EAAYJ,EAAalD,GAC/B,GAAIqD,EAAUE,OAASD,EAAUC,OAASV,EAAS7C,GAAIK,KAAKgD,UAAYR,EAAS7C,GAAIK,KAAKiD,UAAW,CACjG,IAAME,IAAYH,EAAUE,OAASD,EAAUC,SAAWV,EAAS7C,GAAIK,KAAKgD,UAAYR,EAAS7C,GAAIK,KAAKiD,WAAa,KAAKG,QAAQ,GACpI,MAAM,mDAAN,OAAkBD,EAAlB,KAEJ,IAAIE,EAAY,EACZC,EAAM,EACNC,EAAM,EACVf,EAAS7C,GAAI6D,QAAQC,SAAQ,SAAAC,GACzB,GAAIlB,EAASkB,GAAW,CACpBL,IACA,IAAML,EAAYP,EAAaiB,GACzBT,EAAYJ,EAAaa,GAC/BJ,GAAON,EAAUE,OAASD,EAAUC,OACpCK,GAAOI,KAAKC,IAAIC,IAAqBrB,EAASkB,GAAU1D,KAAKgD,WAC7DO,GAAOI,KAAKC,IAAIC,IAAqBrB,EAASkB,GAAU1D,KAAKiD,eAIrE,IAAMa,EAAgBtB,EAAS7C,GAAI6D,QAAQN,OAC3C,GAAIG,EAAYS,EAAe,CAC3B,IAAMX,EAAkB,IAARI,EAAY,GAAKF,EAAYS,EAAgB,KAAKV,QAAQ,GAC1E,MAAM,mDAAN,OAAkBD,EAAlB,KAEJ,IAAMA,EAAkB,IAARI,EAAY,GAAKD,EAAMC,EAAM,KAAKH,QAAQ,GAC1D,MAAgB,QAAZD,EACO,qBAEL,mDAAN,OAAkBA,EAAlB,MAGEY,EAAW,SAACpE,EAAYK,GACrBwC,EAAS7C,KACV6C,EAAS7C,GAAM,CACXK,OACA2C,cAAe,GACfG,cAAe,GACfU,QAAS,IAEb3C,MA0BFmD,EAAiB,SAACrE,GASpB,IAToC,IAAD,EAI/BD,EAAWC,GAFXM,EAF+B,EAE/BA,gBACAQ,EAH+B,EAG/BA,gBAGEwD,EAAgBN,KAAKC,IA7JT,EA6J4BD,KAAKO,KAAK1B,EAAS7C,GAAIK,KAAKgD,UAAY,MAChFmB,EAAgBR,KAAKC,IA9JT,EA8J4BD,KAAKO,KAAK1B,EAAS7C,GAAIK,KAAKiD,UAAY,MAPnD,WAS1B/C,GACL,GAAIA,GAAQ+D,EAAe,CAEvB9B,GADa,kBAAMlC,EAAgBC,GAAMqC,MAAK,SAAAS,GAAS,OAjC3C,SAACrD,EAAYO,EAAckE,GAA+B,IACvEZ,EAAWhB,EAAS7C,GAApB6D,QACPhB,EAAS7C,GAAIgD,cAAczC,EAAO,GAAKkE,EACvC,IAAMpB,EAAYP,EAAa9C,GACzBsD,EAAYJ,EAAalD,GAC/B6C,EAAS7C,GAAI6D,QAAUd,eAAeM,EAAWC,GAC5CP,UAAUc,EAAShB,EAAS7C,GAAI6D,UACjC3C,IA0B+DwD,CAAgB1E,EAAIO,EAAM8C,SAGzF,GAAI9C,GAAQiE,EAAe,CAEvBhC,GADa,kBAAM1B,EAAgBP,GAAMqC,MAAK,SAAAU,GAAS,OA1B3C,SAACtD,EAAYO,EAAcoE,GAA+B,IACvEd,EAAWhB,EAAS7C,GAApB6D,QACPhB,EAAS7C,GAAImD,cAAc5C,EAAO,GAAKoE,EACvC,IAAMtB,EAAYP,EAAa9C,GACzBsD,EAAYJ,EAAalD,GAC/B6C,EAAS7C,GAAI6D,QAAUd,eAAeM,EAAWC,GAC5CP,UAAUc,EAAShB,EAAS7C,GAAI6D,UACjC3C,IAmB+D0D,CAAgB5E,EAAIO,EAAM+C,WANpF/C,EAAO,EAAGA,GAAQyD,KAAKa,IAAIP,EAAeE,GAAgBjE,IAAS,EAAnEA,IAYAuE,EAAK,uCAAG,WAAO9E,GAAP,eAAAG,EAAA,sDACX4E,EAAW,WACblC,EAAS7C,GAAI6D,QAAQC,SAAQ,SAAAC,GAEzBvB,GADa,kBAAMzC,EAAWgE,GAAU7D,aAAa0C,MAAK,SAAAvC,GAAI,OAAI+D,EAASL,EAAU1D,YAGzFwC,EAAS7C,GAAI6D,QAAQC,SAAQ,SAAAC,GACzBvB,GAAQ,kBAAM6B,EAAeN,UAKrCvB,GADa,kBAAMzC,EAAWC,GAAIE,aAAa0C,MAAK,SAAAvC,GAAI,OAAI+D,EAASpE,EAAIK,SAEzEmC,GAAQ,WACJ6B,EAAerE,GACfwC,EAAQuC,MAfK,2CAAH,sD,SChLZC,EAAyB,CAAC,KAAO,SAAW,yBAA2B,gBAAkB,6B,yBCI3FC,EAA4B,KA+BjBC,EAxBU,SAAC,GAAoB,IAAnBC,EAAkB,EAAlBA,MAAOC,EAAW,EAAXA,MACxBC,EAAMC,iBAAuB,MAoBnC,OAnBAC,2BACI,WACOF,EAAIG,UACHP,EAAQQ,YAAKJ,EAAIG,YAGzB,IAGJE,qBACI,WACI,GAAGT,EAAO,CACN,IAAMU,EDvBI,SAACR,EAAeC,GA6BtC,OA5BAD,EAAMrB,SAAQ,SAAA8B,GAGV,OADAA,EAAKC,KAAOD,EAAK5F,GACV4F,KAEI,CACXE,OAAQ,CACJC,KAAM,CAAC,cAAe,QAAS,MAAO,MAAO,UAEjDC,OAAQ,CAAC,CACLC,KAAM,QACNC,OAAQ,QACRC,WAAW,EACXC,MAAO,CACHC,SAAU,QACVC,UAAW,OAEfC,WAAW,EACXR,KAAMZ,EACNH,WAAYA,EAAWrE,KAAI,SAAAkF,GAAI,MAAK,CAACA,WACrCW,MAAO,CACHC,WAAY,GACZC,UAAW,GACXC,QAAS,IAEbC,MAAOxB,KCHayB,CAAW1B,EAAOC,GAClCH,EAAM6B,UAAUnB,MAGxB,CAACR,EAAOC,IAGL,qBAAK2B,UAAWC,IAAEC,UAAW5B,IAAKA,K,iBCzBvC6B,EAAoB,SAAC,GAAU,IAATlH,EAAQ,EAARA,GACxBqB,IADgC,MHkCJ,SAACrB,GAE7B,IAAK6C,EAAS7C,GACV,MAAO,CAAC,CAAC,CAACA,KAAImH,SAAU,OAAQ,IAEpC,IAAMC,EAASzF,IAETwD,EAAgB,GAChBC,EAAgB,GAEtBD,EAAMkC,KAAK,CAACrH,KAAImH,SAAU,KAAMG,OAAO,IAEvC,IAAMjE,EAAYP,EAAa9C,GAEzB6D,EAAoBhB,EAAS7C,GAAI6D,QA2BvC,OAzBAA,EAAQC,SAAQ,SAAAC,GACZoB,EAAMkC,KAAK,CAACrH,GAAI+D,EAAUoD,SAAU,WACpC/B,EAAMiC,KAAK,CAACE,OAAQvH,EAAIgC,OAAQ+B,OAGpCF,EAAQC,SAAQ,SAAAC,GACZ,IAAMyD,EAAa3E,EAASkB,GACxByD,GACAA,EAAW3D,QAAQC,SAAQ,SAAA2D,GACvBrC,EAAMiC,KAAK,CAACE,OAAQxD,EAAU/B,OAAQyF,IAClCtC,EAAMuC,MAAK,SAAA9G,GAAI,OAAIA,EAAKZ,KAAOyH,OAG3BL,EAAO5F,QAAU6B,EAAUsE,SAASF,GACpCtC,EAAMkC,KAAK,CAACrH,GAAIyH,EAAgBN,SAAU,4BACnCC,EAAO3F,aAAe2D,EAAMnC,QAAO,SAAA2E,GAAI,OAAIA,EAAK5F,SAAWyF,KAAgBlE,OAAS,GAEpF6D,EAAO1F,MADdyD,EAAMkC,KAAK,CAACrH,GAAIyH,EAAgBN,SAAU,yBASvD,CAAChC,EAAOC,GGzEQyC,CAAiB7H,GAFR,mBAEzBmF,EAFyB,KAElBC,EAFkB,KAGhC,OACI,cAAC,EAAD,CAAOD,MAAOA,EAAOC,MAAOA,KAI9B0C,EAA2B,SAAC,GAAU,IAAT9H,EAAQ,EAARA,GAE/B,OADAqB,IACO,qBAAK0F,UAAWC,IAAEe,YAAlB,SAAgC3E,EAAuBpD,MAG5DgI,EAAW,SAAC,GAAgB,IAAfC,EAAc,EAAdA,SACf,OAAO,qBAAKlB,UAAWC,IAAEkB,KAAlB,SAAyBD,KA4ErBE,EAzEH,WACR,IAAMf,EAASvF,IADD,EAEgBuG,mBAAS,IAFzB,mBAEP5C,EAFO,KAEE6C,EAFF,OAGYD,mBAAS,IAHrB,mBAGPE,EAHO,KAGAC,EAHA,KAIRC,EAAeC,uBACjB,SAAC1G,GACGwG,EAASxG,EAAEC,OAAOsG,SAEtB,IAEEI,EAAcD,uBAChB,WACIJ,EAAWC,GACXxD,EAAMwD,KAEV,CAACA,IAECK,EAAcF,uBAChB,SAAC1G,GACkB,UAAXA,EAAE6G,MAA+B,gBAAX7G,EAAE6G,MACxBF,MAGR,CAACA,IAEL,OACI,qCACKlD,GAAW,cAAC,EAAD,CAAMxF,GAAIwF,IACtB,qBAAKuB,UAAWC,IAAE6B,QAAlB,SACKrD,EACG,qCACI,cAAC,EAAD,UAAM,cAAC,EAAD,CAAaxF,GAAIwF,MACvB,eAAC,EAAD,WACI,uBACIS,KAAK,WACLjG,GAAG,SACH8I,SAAU1B,EAAO1F,IACjBO,QAASmF,EAAO5F,OAChBuH,SAAUjH,IAEd,uBAAOkH,QAAQ,SAAf,6EAEJ,eAAC,EAAD,WACI,uBACI/C,KAAK,WACLjG,GAAG,cACH8I,SAAU1B,EAAO1F,IACjBO,QAASmF,EAAO3F,YAChBsH,SAAU5G,IAEd,uBAAO6G,QAAQ,cAAf,qGAEJ,eAAC,EAAD,WACI,uBACI/C,KAAK,WACLjG,GAAG,MACHiC,QAASmF,EAAO1F,IAChBqH,SAAU3G,IAEd,uBAAO4G,QAAQ,MAAf,oEAIR,eAAC,EAAD,WACI,uBAAOC,YAAY,kBAAQX,MAAOA,EAAOS,SAAUP,EAAcU,UAAWP,IAC5E,sBAAM5B,UAAWC,IAAEmC,OAAQC,QAASV,EAApC,mCC7ETW,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqB3G,MAAK,YAAkD,IAA/C4G,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCHdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,K,mBCfA1J,EAAOC,QAAU,CAAC,QAAU,qBAAqB,KAAO,kBAAkB,OAAS,oBAAoB,YAAc,4B","file":"static/js/main.2e50cce6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Graph_container__2Kff7\"};","// @ts-nocheck\nimport {client as getClient} from 'octonode';\nimport {Info} from '../types';\n\nconst client = getClient('2dc94bbd29451f930a2ffd7c2607c11d7030f8d7');\n\nexport const getUserApi = (id: string) => {\n    const user = client.user(id);\n    const apiGetInfo = async (): Promise<Info> => {\n        const [info] = await user.infoAsync();\n        return info;\n    };\n    const apiGetFollowers = async (page = 1): Promise<string[]> => {\n        const [list] = await user.followersAsync({page, per_page: 100});\n        return list.map(item => item.login)\n    };\n    const apiGetFollowing = async (page = 1): Promise<string[]> => {\n        const [list] = await user.followingAsync({page, per_page: 100});\n        return list.map(item => item.login)\n    };\n    return {\n        apiGetInfo,\n        apiGetFollowers,\n        apiGetFollowing,\n    }\n};\n","import {createRegion} from \"region-core\";\n\nconst forceUpdateRegion = createRegion(0);\n\nexport const forceUpdate = () => forceUpdateRegion.set(v => v + 1);\n\nexport const useForceUpdate = forceUpdateRegion.useValue;\n\ninterface Option {\n    follow: boolean\n    moreThanOne: boolean\n    all: boolean\n}\n\nconst optionRegion = createRegion<Option>({\n    follow: true,\n    moreThanOne: true,\n    all: true,\n});\n\nexport const getOption = optionRegion.getValue;\n\nexport const useOption = optionRegion.useValue;\n\nexport const handleFollowChange = (e: any) => {\n    if (e.target.checked) {\n        optionRegion.set(state => ({follow: true, moreThanOne: state.moreThanOne, all: false}))\n    } else {\n        optionRegion.set(state => ({follow: false, moreThanOne: state.moreThanOne, all: false}))\n    }\n};\n\nexport const handleMoreThanOneChange = (e: any) => {\n    if (e.target.checked) {\n        optionRegion.set(state => ({follow: state.follow, moreThanOne: true, all: false}))\n    } else {\n        optionRegion.set(state => ({follow: state.follow, moreThanOne: false, all: false}))\n    }\n};\n\nexport const handleAllChange = (e: any) => {\n    if (e.target.checked) {\n        optionRegion.set(state => ({follow: true, moreThanOne: true, all: true}))\n    } else {\n        optionRegion.set(state => ({follow: true, moreThanOne: true, all: false}))\n    }\n};\n","import * as _ from 'lodash';\nimport {getUserApi} from \"../github-api\";\nimport {Info, Link, Node} from '../types';\nimport {forceUpdate, getOption} from './utils';\n\nconst duration = 99;\nconst maxFollowPage = 8;\n\nlet currentPromise = Promise.resolve();\n\n// not concurrent for now\nconst addTask = (task: () => Promise<void> | void) => {\n    const onFulfilled = () => new Promise<void>(resolve => {\n        setTimeout(() => {\n            resolve(task())\n        }, duration);\n    });\n    currentPromise = currentPromise.then(onFulfilled, onFulfilled);\n};\n\ninterface Entity {\n    info: Info,\n    followersList: string[][],\n    followingList: string[][],\n    friends: string[],\n}\n\ninterface EntityMap {\n    [id: string]: Entity\n}\n\nconst entities: EntityMap = {};\n\nconst getFollowers = (id: string) => {\n    const followers = _.flatten(entities[id].followersList).filter(item => item);\n    return followers;\n};\n\nconst getFollowing = (id: string) => {\n    const following = _.flatten(entities[id].followingList).filter(item => item);\n    return following;\n};\n\nexport const getNodesAndLinks = (id: string): [Node[], Link[]] => {\n    // 第一次渲染时不要 fixed，等到得到了位置之后再 fixed\n    if (!entities[id]) {\n        return [[{id, category: 'me'}], []];\n    }\n    const option = getOption();\n\n    const nodes: Node[] = [];\n    const links: Link[] = [];\n\n    nodes.push({id, category: 'me', fixed: true} as Node);\n\n    const followers = getFollowers(id);\n    // const following = getFollowing(id);\n    const friends: string[] = entities[id].friends;\n\n    friends.forEach(friendId => {\n        nodes.push({id: friendId, category: 'friend'});\n        links.push({source: id, target: friendId});\n    });\n\n    friends.forEach(friendId => {\n        const friendInfo = entities[friendId];\n        if (friendInfo) {\n            friendInfo.friends.forEach(friendFriendId => {\n                links.push({source: friendId, target: friendFriendId});\n                if (nodes.find(item => item.id === friendFriendId)) {\n                    // 重复的 id\n                } else {\n                    if (option.follow && followers.includes(friendFriendId)) {\n                        nodes.push({id: friendFriendId, category: 'friend-friend+follower'});\n                    } else if (option.moreThanOne && links.filter(link => link.target === friendFriendId).length > 1) {\n                        nodes.push({id: friendFriendId, category: 'friend-friend'});\n                    } else if (option.all) {\n                        nodes.push({id: friendFriendId, category: 'friend-friend'});\n                    }\n                }\n            })\n        }\n    });\n\n    return [nodes, links];\n};\n\nexport const getProgressDescription = (id: string): string => {\n    if (!entities[id]) {\n        return '初始化...';\n    }\n    const followers = getFollowers(id);\n    const following = getFollowing(id);\n    if (followers.length + following.length < entities[id].info.followers + entities[id].info.following) {\n        const percent = ((followers.length + following.length) / (entities[id].info.followers + entities[id].info.following) * 100).toFixed(0);\n        return `加载一度好友中，${percent}%`;\n    }\n    let infoCount = 0;\n    let num = 0;\n    let sum = 0;\n    entities[id].friends.forEach(friendId => {\n        if (entities[friendId]) {\n            infoCount++;\n            const followers = getFollowers(friendId);\n            const following = getFollowing(friendId);\n            num += followers.length + following.length;\n            sum += Math.min(maxFollowPage * 100, entities[friendId].info.followers);\n            sum += Math.min(maxFollowPage * 100, entities[friendId].info.following);\n        }\n    });\n\n    const friendsLength = entities[id].friends.length;\n    if (infoCount < friendsLength) {\n        const percent = sum === 0 ? 0 : (infoCount / friendsLength * 100).toFixed(0);\n        return `加载好友信息中，${percent}%`;\n    }\n    const percent = sum === 0 ? 0 : (num / sum * 100).toFixed(0);\n    if (percent === '100') {\n        return '已完成';\n    }\n    return `加载二度好友中，${percent}%`;\n};\n\nconst initUser = (id: string, info: Info) => {\n    if (!entities[id]) {\n        entities[id] = {\n            info,\n            followersList: [],\n            followingList: [],\n            friends: [],\n        };\n        forceUpdate();\n    }\n};\n\nconst insertFollowers = (id: string, page: number, appendFollowers: string[]) => {\n    const {friends} = entities[id];\n    entities[id].followersList[page - 1] = appendFollowers;\n    const followers = getFollowers(id);\n    const following = getFollowing(id);\n    entities[id].friends = _.intersection(followers, following);\n    if (!_.isEqual(friends, entities[id].friends)) {\n        forceUpdate();\n    }\n};\n\nconst insertFollowing = (id: string, page: number, appendFollowing: string[]) => {\n    const {friends} = entities[id];\n    entities[id].followingList[page - 1] = appendFollowing;\n    const followers = getFollowers(id);\n    const following = getFollowing(id);\n    entities[id].friends = _.intersection(followers, following);\n    if (!_.isEqual(friends, entities[id].friends)) {\n        forceUpdate();\n    }\n};\n\nconst loadUserFollow = (id: string) => {\n    const {\n        apiGetFollowers,\n        apiGetFollowing,\n    } = getUserApi(id);\n\n    const followersPage = Math.min(maxFollowPage, Math.ceil(entities[id].info.followers / 100));\n    const followingPage = Math.min(maxFollowPage, Math.ceil(entities[id].info.following / 100));\n\n    for (let page = 1; page <= Math.max(followersPage, followingPage); page++) {\n        if (page <= followersPage) {\n            const task = () => apiGetFollowers(page).then(followers => insertFollowers(id, page, followers));\n            addTask(task);\n        }\n        if (page <= followingPage) {\n            const task = () => apiGetFollowing(page).then(following => insertFollowing(id, page, following));\n            addTask(task);\n        }\n    }\n};\n\nexport const start = async (id: string) => {\n    const callback = () => {\n        entities[id].friends.forEach(friendId => {\n            const task = () => getUserApi(friendId).apiGetInfo().then(info => initUser(friendId, info));\n            addTask(task);\n        });\n        entities[id].friends.forEach(friendId => {\n            addTask(() => loadUserFollow(friendId));\n        });\n    };\n\n    const task = () => getUserApi(id).apiGetInfo().then(info => initUser(id, info));\n    addTask(task);\n    addTask(() => {\n        loadUserFollow(id);\n        addTask(callback)\n    });\n};\n","import {Category, Link, Node} from '../types';\n\nconst categories: Category[] = ['me' , 'friend' , 'friend-friend+follower' , 'friend-friend' , 'friend-following+follower'];\n\nexport const getOptions = (nodes: Node[], links: Link[]) => {\n    nodes.forEach(node => {\n        // @ts-ignore\n        node.name = node.id;\n        return node;\n    });\n    const option = {\n        legend: {\n            data: ['HTMLElement', 'WebGL', 'SVG', 'CSS', 'Other']\n        },\n        series: [{\n            type: 'graph',\n            layout: 'force',\n            animation: false,\n            label: {\n                position: 'right',\n                formatter: '{b}'\n            },\n            draggable: true,\n            data: nodes,\n            categories: categories.map(name => ({name})),\n            force: {\n                edgeLength: 50,\n                repulsion: 20,\n                gravity: 0.2\n            },\n            edges: links\n        }]\n    };\n    return option;\n};\n","import {useRef, useLayoutEffect, useEffect, FC} from \"react\";\nimport {init, EChartsType} from 'echarts';\nimport {Node, Link} from '../types';\nimport {getOptions} from \"./getOptions\";\nimport c from './Graph.module.css';\n\nlet chart: EChartsType | null = null;\n\ninterface Props {\n    nodes: Node[];\n    links: Link[];\n}\n\nconst Graph: FC<Props> = ({nodes, links}) => {\n    const ref = useRef<HTMLDivElement>(null);\n    useLayoutEffect(\n        () => {\n            if(ref.current) {\n                chart = init(ref.current)\n            }\n        },\n        []\n    );\n\n    useEffect(\n        () => {\n            if(chart) {\n                const options = getOptions(nodes, links);\n                chart.setOption(options)\n            }\n        },\n        [nodes, links]\n    );\n\n    return <div className={c.container} ref={ref} />\n};\n\nexport default Graph;\n","import React, {FC, useCallback, useState} from 'react';\nimport {getNodesAndLinks, start, getProgressDescription} from './region';\nimport {useForceUpdate, useOption, handleFollowChange, handleMoreThanOneChange, handleAllChange} from './region/utils';\nimport Graph from \"./echarts/Graph\";\nimport c from './App.module.css';\n\ninterface PropsId {\n    id: string\n}\nconst Main: FC<PropsId> = ({id}) => {\n    useForceUpdate();\n    const [nodes, links] = getNodesAndLinks(id);\n    return (\n        <Graph nodes={nodes} links={links} />\n    );\n};\n\nconst Description: FC<PropsId> = ({id}) => {\n    useForceUpdate();\n    return <div className={c.description}>{getProgressDescription(id)}</div>\n};\n\nconst Line: FC = ({children}) => {\n    return <div className={c.line}>{children}</div>;\n};\n\nconst App = () => {\n    const option = useOption();\n    const [current, setCurrent] = useState('');\n    const [value, setValue] = useState('');\n    const handleChange = useCallback(\n        (e: any) => {\n            setValue(e.target.value)\n        },\n        []\n    );\n    const handleClick = useCallback(\n        () => {\n            setCurrent(value);\n            start(value)\n        },\n        [value]\n    );\n    const handleEnter = useCallback(\n        (e) => {\n            if (e.code === 'Enter' || e.code === 'NumpadEnter') {\n                handleClick()\n            }\n        },\n        [handleClick]\n    );\n    return (\n        <>\n            {current && <Main id={current} />}\n            <div className={c.context}>\n                {current ? (\n                    <>\n                        <Line><Description id={current} /></Line>\n                        <Line>\n                            <input\n                                type=\"checkbox\"\n                                id=\"follow\"\n                                disabled={option.all}\n                                checked={option.follow}\n                                onChange={handleFollowChange}\n                            />\n                            <label htmlFor=\"follow\">显示关注我的二度好友</label>\n                        </Line>\n                        <Line>\n                            <input\n                                type=\"checkbox\"\n                                id=\"moreThanOne\"\n                                disabled={option.all}\n                                checked={option.moreThanOne}\n                                onChange={handleMoreThanOneChange}\n                            />\n                            <label htmlFor=\"moreThanOne\">显示有两个共同好友的二度好友</label>\n                        </Line>\n                        <Line>\n                            <input\n                                type=\"checkbox\"\n                                id=\"all\"\n                                checked={option.all}\n                                onChange={handleAllChange}\n                            />\n                            <label htmlFor=\"all\">显示所有二度好友</label>\n                        </Line>\n                    </>\n                ) : (\n                    <Line>\n                        <input placeholder=\"输入 id\" value={value} onChange={handleChange} onKeyDown={handleEnter} />\n                        <span className={c.button} onClick={handleClick}>开始</span>\n                    </Line>\n                )}\n            </div>\n        </>\n    );\n};\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"context\":\"App_context__10UXM\",\"line\":\"App_line__3xSd4\",\"button\":\"App_button__13pio\",\"description\":\"App_description__1hmAY\"};"],"sourceRoot":""}