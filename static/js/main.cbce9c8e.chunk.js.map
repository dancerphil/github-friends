{"version":3,"sources":["echarts/Graph.module.css","App.module.css","github-api/index.ts","region/utils.ts","dataStructures/GraphVertex.ts","dataStructures/GraphEdge.ts","dataStructures/Entities.ts","dataStructures/Graph.ts","region/nodesAndLinks.ts","region/description.ts","region/exception.ts","region/index.ts","echarts/getOptions.ts","echarts/Graph.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["module","exports","client","withDelayAndRetry","asyncFunction","params","a","Promise","resolve","setTimeout","result","getMeInfo","token","getClient","me","infoAsync","getUserApi","id","user","apiGetInfo","info","apiGetFollowers","page","followersAsync","per_page","list","map","item","login","apiGetFollowings","followingAsync","currentIdRegion","createRegion","getCurrentId","getValue","useCurrentId","useValue","setCurrentId","set","optionRegion","follow","moreThanOne","showFriendFriend","showFriendFriendFriend","getOption","useOption","handleFollowChange","e","target","checked","state","handleMoreThanOneChange","handleShowFriendFriendChange","handleShowFriendFriendFriendChange","GraphVertex","value","edges","undefined","Error","this","edge","push","splice","findIndex","node","endVertex","getFollowings","filter","following","find","length","requiredEdge","vertex","startVertex","getEdges","forEach","deleteEdge","callback","GraphEdge","startVertexKey","getKey","endVertexKey","tmp","graph","vertices","newVertex","vertexKey","getFriends","Object","values","getVertexByKey","addVertex","addEdge","findEdge","keys","toString","getVertex","initVertex","startId","endId","key","getEdge","listeners","nodeAndLinksRef","current","subscription","getCurrentValue","subscribe","listener","indexOf","getNodesAndLinks","currentId","option","rootId","root","visited","nodes","queue","pushNode","depth","category","includes","name","search","friends","i","friendId","source","next","fixed","BFS","emitNodesAndLinks","prevValue","descriptionRef","emitDescription","exceptionsRegion","pushException","message","array","useExceptions","currentPromise","addTask","task","onFulfilled","then","updateUserInfo","insertFollowings","followings","insertFollowers","followers","follower","loadUserFollowing","prefixText","followingsPage","Math","ceil","followersPage","start","categories","chart","Graph","links","ref","useRef","useLayoutEffect","init","color","useEffect","options","series","type","layout","animation","label","position","formatter","draggable","data","force","edgeLength","repulsion","gravity","getOptions","setOption","className","c","container","tokenRegion","createLocalStorageRegion","setToken","useToken","Main","useSubscription","StartMenu","useState","setValue","handleChange","useCallback","handleClick","handleEnter","code","placeholder","onChange","onKeyDown","button","onClick","link","href","rel","tip","Description","description","Line","children","line","App","exceptions","context","disabled","htmlFor","hoverIcon","hoverLine","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cbce9c8e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Graph_container__2Kff7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"context\":\"App_context__10UXM\",\"line\":\"App_line__3xSd4\",\"hoverLine\":\"App_hoverLine__15sIW\",\"hoverIcon\":\"App_hoverIcon__1t0bc\",\"button\":\"App_button__13pio\",\"link\":\"App_link__TB6Cl\",\"tip\":\"App_tip__BO_Ie\",\"description\":\"App_description__1hmAY\"};","// @ts-nocheck\nimport {client as getClient} from 'octonode';\nimport {Info} from '../types';\n\nlet client;\n\n// 为了防止 github ban ip，所有请求先 delay 一段时间\nconst duration = 200;\n\nconst delay = () => new Promise(resolve => setTimeout(resolve, duration));\n\nconst withDelayAndRetry = <T>(asyncFunction: T): T  => {\n    // let retry = 0;\n    const func: T = async (params: T1) => {\n        try {\n            await delay();\n            const result = await asyncFunction(params);\n            return result;\n        } catch (e) {\n            // test retry\n            // if (retry < 3) {\n            //     retry ++;\n            //     func(params);\n            // }\n        }\n    };\n    return func;\n};\n\nexport const getMeInfo = async (token: string) => {\n    client = getClient(token);\n    const [me] = await client.me().infoAsync();\n    return me\n};\n\nexport const getUserApi = (id: string) => {\n    const user = client.user(id);\n    const apiGetInfo = async (): Promise<Info> => {\n        const [info] = await user.infoAsync();\n        return info;\n    };\n    const apiGetFollowers = async (page = 1): Promise<string[]> => {\n        const [list] = await user.followersAsync({page, per_page: 100});\n        return list.map(item => item.login)\n    };\n    const apiGetFollowings = async (page = 1): Promise<string[]> => {\n        const [list] = await user.followingAsync({page, per_page: 100});\n        return list.map(item => item.login)\n    };\n    return {\n        apiGetInfo: withDelayAndRetry(apiGetInfo),\n        apiGetFollowers: withDelayAndRetry(apiGetFollowers),\n        apiGetFollowings: withDelayAndRetry(apiGetFollowings),\n    }\n};\n","import {createRegion} from \"region-core\";\nimport {Option} from '../types';\n\nconst currentIdRegion = createRegion<string>();\n\nexport const getCurrentId = currentIdRegion.getValue;\n\nexport const useCurrentId = currentIdRegion.useValue;\n\nexport const setCurrentId = currentIdRegion.set;\n\nconst optionRegion = createRegion<Option>({\n    follow: true,\n    moreThanOne: true,\n    showFriendFriend: true,\n    showFriendFriendFriend: false,\n});\n\nexport const getOption = optionRegion.getValue;\n\nexport const useOption = optionRegion.useValue;\n\nexport const handleFollowChange = (e: any) => {\n    if (e.target.checked) {\n        optionRegion.set(state => ({\n            follow: true,\n            moreThanOne: state.moreThanOne,\n            showFriendFriend: false,\n            showFriendFriendFriend: false,\n        }))\n    } else {\n        optionRegion.set(state => ({\n            follow: false,\n            moreThanOne: state.moreThanOne,\n            showFriendFriend: false,\n            showFriendFriendFriend: false,\n        }))\n    }\n};\n\nexport const handleMoreThanOneChange = (e: any) => {\n    if (e.target.checked) {\n        optionRegion.set(state => ({\n            follow: state.follow,\n            moreThanOne: true,\n            showFriendFriend: false,\n            showFriendFriendFriend: false,\n        }))\n    } else {\n        optionRegion.set(state => ({\n            follow: state.follow,\n            moreThanOne: false,\n            showFriendFriend: false,\n            showFriendFriendFriend: false,\n        }))\n    }\n};\n\nexport const handleShowFriendFriendChange = (e: any) => {\n    optionRegion.set(state => ({\n        follow: true,\n        moreThanOne: true,\n        showFriendFriend: e.target.checked,\n        showFriendFriendFriend: false,\n    }))\n};\n\nexport const handleShowFriendFriendFriendChange = (e: any) => {\n    optionRegion.set(state => ({\n        follow: true,\n        moreThanOne: true,\n        showFriendFriend: true,\n        showFriendFriendFriend: e.target.checked,\n    }))\n};\n","import GraphEdge from \"./GraphEdge\";\nimport {Info} from \"../types\";\n\nexport default class GraphVertex {\n    value: string;\n    info?: Info;\n    edges: GraphEdge[];\n\n    /**\n     * @param {string} value\n     */\n    constructor(value: string) {\n        if (value === undefined) {\n            throw new Error('Graph vertex must have a value');\n        }\n\n        // Normally you would store string value like vertex name.\n        // But generally it may be any object as well\n        this.value = value;\n        this.edges = [];\n    }\n\n    /**\n     * @param {GraphEdge} edge\n     * @returns {GraphVertex}\n     */\n    addEdge(edge: GraphEdge) {\n        this.edges.push(edge);\n\n        return this;\n    }\n\n    /**\n     * @param {GraphEdge} edge\n     */\n    deleteEdge(edge: GraphEdge) {\n        // We don't need deleteEdge to be fast\n        this.edges.splice(this.edges.findIndex(node => node === edge), 1);\n    }\n\n    /**\n     * @returns {GraphVertex[]}\n     */\n    getFollowings() {\n        const edges = this.edges;\n        return edges.map((node: GraphEdge) => node.endVertex);\n    }\n\n    /**\n     * @returns {GraphVertex[]}\n     */\n    getFriends() {\n        const followings = this.getFollowings();\n        return followings.filter(following => following.getFollowings().find(node => node === this));\n    }\n\n    /**\n     * @return {GraphEdge[]}\n     */\n    getEdges() {\n        return this.edges;\n    }\n\n    /**\n     * @return {number}\n     */\n    getDegree() {\n        return this.edges.length;\n    }\n\n    /**\n     * @param {GraphEdge} requiredEdge\n     * @returns {boolean}\n     */\n    hasEdge(requiredEdge: GraphEdge) {\n        const edgeNode = this.edges.find((edge) => edge === requiredEdge);\n\n        return !!edgeNode;\n    }\n\n    /**\n     * @param {GraphVertex} vertex\n     * @returns {(GraphEdge|null)}\n     */\n    findEdge(vertex: GraphVertex) {\n        const edgeFinder = (edge: GraphEdge) => {\n            return edge.startVertex === vertex || edge.endVertex === vertex;\n        };\n\n        const edge = this.edges.find(edgeFinder);\n\n        return edge ? edge : null;\n    }\n\n    /**\n     * @returns {string}\n     */\n    getKey() {\n        return this.value;\n    }\n\n    /**\n     * @return {GraphVertex}\n     */\n    deleteAllEdges() {\n        this.getEdges().forEach((edge) => this.deleteEdge(edge));\n\n        return this;\n    }\n\n    /**\n     * @param {function} [callback]\n     * @returns {string}\n     */\n    toString(callback: (value: string) => string) {\n        return callback ? callback(this.value) : `${this.value}`;\n    }\n}\n","import GraphVertex from \"./GraphVertex\";\n\nexport default class GraphEdge {\n    startVertex: GraphVertex;\n    endVertex: GraphVertex;\n\n    /**\n     * @param {GraphVertex} startVertex\n     * @param {GraphVertex} endVertex\n     */\n    constructor(startVertex: GraphVertex, endVertex: GraphVertex) {\n        this.startVertex = startVertex;\n        this.endVertex = endVertex;\n    }\n\n    /**\n     * @return {string}\n     */\n    getKey() {\n        const startVertexKey = this.startVertex.getKey();\n        const endVertexKey = this.endVertex.getKey();\n\n        return `${startVertexKey}_${endVertexKey}`;\n    }\n\n    /**\n     * @return {GraphEdge}\n     */\n    reverse() {\n        const tmp = this.startVertex;\n        this.startVertex = this.endVertex;\n        this.endVertex = tmp;\n\n        return this;\n    }\n\n    /**\n     * @return {string}\n     */\n    toString() {\n        return this.getKey();\n    }\n}\n","import GraphVertex from \"./GraphVertex\";\nimport GraphEdge from './GraphEdge';\nimport Graph from \"./Graph\";\nimport {Category, Link, Node, Option} from \"../types\";\n\nexport const graph = new Graph();\n\ninterface Vertices {\n    [id: string]: GraphVertex\n}\n\nconst vertices: Vertices = {};\n\nexport const getVertex = (id: string) => vertices[id];\n\nexport const initVertex = (id: string) => {\n    if (!vertices[id]) {\n        vertices[id] = new GraphVertex(id);\n    }\n};\n\ninterface Edges {\n    [key: string]: GraphEdge\n}\n\nconst edges: Edges = {};\n\nexport const getEdge = (startId: string, endId: string) => edges[`${startId} ${endId}`];\n\nexport const addEdge = (startId: string, endId: string) => {\n    initVertex(startId);\n    initVertex(endId);\n    const key = `${startId} ${endId}`;\n    if (!edges[key]) {\n        edges[key] = new GraphEdge(getVertex(startId), getVertex(endId));\n        graph.addEdge(getEdge(startId, endId))\n    }\n};\n\nexport const getFollowings = (id: string) => {\n    return graph.getFollowings(getVertex(id));\n};\n\nexport const getFriends = (id: string) => {\n    return graph.getFriends(getVertex(id));\n};\n\nexport const BFS = (rootId: string, option: Option): [Node[], Link[]] => {\n    const root = getVertex(rootId);\n\n    const visited: {[key: string]: boolean} = {};\n    const nodes: Node[] = [];\n    const edges: Link[] = [];\n\n    interface QueueItem {\n        id: string;\n        depth: number;\n    }\n    const queue: QueueItem[] = [];\n\n    const pushNode = (id: string, depth: number) => {\n        visited[id] = true;\n        const category: Category = ((): Category => {\n            switch (depth) {\n                case 0: return 'me';\n                case 1: return 'friend';\n                case 2: {\n                    if (getVertex(id).getFollowings().includes(root)) {\n                        return 'friend-friend+follower'\n                    }\n                    return 'friend-friend';\n                }\n                case 3: {\n                    if (getVertex(id).getFollowings().includes(root)) {\n                        return 'friend-friend-friend+follower'\n                    }\n                    return 'friend-friend-friend';\n                }\n                default: return 'friend-friend-friend'\n            }\n        })();\n\n        nodes.push({\n            name: id,\n            category,\n        });\n    };\n\n    const search = (id: string, depth: number) => {\n        const friends = getVertex(id).getFriends();\n        for (let i = 0; i < friends.length; i++) {\n            const friend = friends[i];\n            const friendId = friend.getKey();\n            edges.push({source: id, target: friendId});\n            if (!visited[friendId]) {\n                if (!option.showFriendFriendFriend && depth === 2) {\n                    // do nothing\n                } else {\n                    pushNode(friendId, depth + 1);\n                    queue.push({id: friendId, depth: depth + 1});\n                }\n            }\n        }\n        const next = queue.splice(0, 1)[0];\n\n        if (next) {\n            search(next.id, next.depth);\n        }\n    };\n\n    pushNode(rootId, 0);\n    search(rootId, 0);\n\n    if (nodes.length > 1) {\n        // @ts-ignore\n        nodes[0].fixed = true\n    }\n\n    return [nodes, edges];\n};\n","import GraphVertex from \"./GraphVertex\";\nimport GraphEdge from \"./GraphEdge\";\n\nexport default class Graph {\n    vertices: {[key in string]: GraphVertex} = {};\n\n    /**\n     * @param {GraphVertex} newVertex\n     * @returns {Graph}\n     */\n    addVertex(newVertex: GraphVertex) {\n        this.vertices[newVertex.getKey()] = newVertex;\n\n        return this;\n    }\n\n    /**\n     * @param {string} vertexKey\n     * @returns GraphVertex\n     */\n    getVertexByKey(vertexKey: string) {\n        return this.vertices[vertexKey];\n    }\n\n    /**\n     * @param {GraphVertex} vertex\n     * @returns {GraphVertex[]}\n     */\n    getFollowings(vertex: GraphVertex) {\n        return vertex.getFollowings();\n    }\n\n    /**\n     * @param {GraphVertex} vertex\n     * @returns {GraphVertex[]}\n     */\n    getFriends(vertex: GraphVertex) {\n        return vertex.getFriends();\n    }\n\n    /**\n     * @return {GraphVertex[]}\n     */\n    getAllVertices() {\n        return Object.values(this.vertices);\n    }\n\n    /**\n     * @param {GraphEdge} edge\n     * @returns {Graph}\n     */\n    addEdge(edge: GraphEdge) {\n        // Try to find and end start vertices.\n        let startVertex = this.getVertexByKey(edge.startVertex.getKey());\n        let endVertex = this.getVertexByKey(edge.endVertex.getKey());\n\n        // Insert start vertex if it wasn't inserted.\n        if (!startVertex) {\n            this.addVertex(edge.startVertex);\n            startVertex = this.getVertexByKey(edge.startVertex.getKey());\n        }\n\n        // Insert end vertex if it wasn't inserted.\n        if (!endVertex) {\n            this.addVertex(edge.endVertex);\n        }\n\n        // If graph IS directed then add the edge only to start vertex.\n        startVertex.addEdge(edge);\n\n        return this;\n    }\n\n    /**\n     * @param {GraphEdge} edge\n     */\n    deleteEdge(edge: GraphEdge) {\n        // Try to find and end start vertices and delete edge from them.\n        const startVertex = this.getVertexByKey(edge.startVertex.getKey());\n\n        startVertex.deleteEdge(edge);\n    }\n\n    /**\n     * @param {GraphVertex} startVertex\n     * @param {GraphVertex} endVertex\n     * @return {(GraphEdge|null)}\n     */\n    findEdge(startVertex: GraphVertex, endVertex: GraphVertex) {\n        const vertex = this.getVertexByKey(startVertex.getKey());\n\n        if (!vertex) {\n            return null;\n        }\n\n        return vertex.findEdge(endVertex);\n    }\n\n    /**\n     * @return {string}\n     */\n    toString() {\n        return Object.keys(this.vertices).toString();\n    }\n}\n","import {useSubscription} from \"use-subscription\";\nimport {Link, Node} from \"../types\";\nimport {getCurrentId, getOption} from \"./utils\";\nimport {getVertex, getFriends, getFollowings, BFS} from \"../dataStructures/Entities\";\n\ntype Listener = () => void\n\nconst listeners: Listener[] = [];\n\ninterface Ref {\n    current: [Node[], Link[]]\n}\n\nconst nodeAndLinksRef: Ref = {\n    current: [[], []]\n};\n\nconst subscribe = (listener: Listener) => {\n    listeners.push(listener);\n    return () => {\n        listeners.splice(listeners.indexOf(listener), 1);\n    }\n};\n\nconst subscription = {\n    getCurrentValue: () => nodeAndLinksRef.current,\n    subscribe,\n};\n\nconst getNodesAndLinks = (): [Node[], Link[]] => {\n    const currentId = getCurrentId();\n    const option = getOption();\n    if(!currentId) {\n        return [[], []];\n    }\n    return BFS(currentId, option);\n    // // 第一次渲染时不要 fixed，等到得到了位置之后再 fixed\n    // if (!currentId || !getVertex(currentId)) {\n    //     return [[{name: currentId, category: 'me'}], []];\n    // }\n    // const option = getOption();\n    //\n    // const nodes: Node[] = [];\n    // const links: Link[] = [];\n    //\n    // nodes.push({name: currentId, category: 'me'});\n    //\n    // const friends = getFriends(currentId);\n    //\n    // friends.forEach(friend => {\n    //     const friendId = friend.getKey();\n    //     nodes.push({name: friendId, category: 'friend'});\n    //     links.push({source: currentId, target: friendId});\n    //\n    //     const friendFriends = getFriends(friendId);\n    //     friendFriends.forEach(friendFriend => {\n    //         const friendFriendId = friendFriend.getKey();\n    //         links.push({source: friendId, target: friendFriendId});\n    //         if (nodes.find(item => item.name === friendFriendId)) {\n    //             // 重复的 id\n    //         } else {\n    //             const friendFriendFlowing = getFollowings(friendFriendId);\n    //\n    //             if (option.follow && friendFriendFlowing.includes(getVertex(currentId))) {\n    //                 nodes.push({name: friendFriendId, category: 'friend-friend+follower'});\n    //             } else if (option.moreThanOne && links.filter(link => link.target === friendFriendId).length > 1) {\n    //                 nodes.push({name: friendFriendId, category: 'friend-friend'});\n    //             } else if (option.all) {\n    //                 nodes.push({name: friendFriendId, category: 'friend-friend'});\n    //             }\n    //         }\n    //         // 如果二度好友与已知好友相互认识，则显示 edge\n    //         // const friendFriendFriends = getFriends(friendFriendId);\n    //         // friendFriendFriends.forEach(friendFriendFriend => {\n    //         //     const friendFriendFriendId = friendFriendFriend.getKey();\n    //         //     if (nodes.find(item => item.name === friendFriendFriendId)) {\n    //         //         // links.push({source: friendFriendId, target: friendFriendFriendId});\n    //         //     }\n    //         // })\n    //     })\n    // });\n    //\n    // if (nodes.length > 1) {\n    //     // @ts-ignore\n    //     nodes[0].fixed = true\n    // }\n    //\n    // return [nodes, links];\n};\n\nexport const emitNodesAndLinks = () => {\n    const value = getNodesAndLinks();\n    const prevValue = nodeAndLinksRef.current;\n    nodeAndLinksRef.current = value;\n\n    if (value[0].length !== prevValue[0].length || value[1].length !== prevValue[1].length) {\n        listeners.forEach(listener => listener())\n    }\n};\n\nexport const useNodesAndLinks = () => {\n    return useSubscription(subscription)\n};\n","import {useSubscription} from \"use-subscription\";\n\ntype Listener = () => void\n\nconst listeners: Listener[] = [];\n\ninterface Ref {\n    current: string\n}\n\nconst descriptionRef: Ref = {\n    current: ''\n};\n\nconst subscribe = (listener: Listener) => {\n    listeners.push(listener);\n    return () => {\n        listeners.splice(listeners.indexOf(listener), 1);\n    }\n};\n\nconst subscription = {\n    getCurrentValue: () => descriptionRef.current,\n    subscribe,\n};\n\nexport const emitDescription = (value: string) => {\n    const prevValue = descriptionRef.current;\n    descriptionRef.current = value;\n\n    if (prevValue !== value) {\n        listeners.forEach(listener => listener())\n    }\n};\n\nexport const useDescription = () => {\n    return useSubscription(subscription)\n};\n","import {createRegion} from 'region-core';\n\nconst exceptionsRegion = createRegion<string[]>([]);\n\nexport const pushException = (message: string) => {\n    exceptionsRegion.set(array => array.includes(message) ? array : [...array, message]);\n};\n\nexport const useExceptions = exceptionsRegion.useValue;\n","import {getMeInfo, getUserApi} from \"../github-api\";\nimport {Info} from '../types';\nimport {setCurrentId} from './utils';\nimport {emitNodesAndLinks} from './nodesAndLinks';\nimport {getFriends, addEdge, initVertex, getVertex} from '../dataStructures/Entities';\nimport {emitDescription} from \"./description\";\nimport {pushException} from \"./exception\";\n\n// const duration = 200;\n//\nlet currentPromise = Promise.resolve();\n\n// not concurrent for now\nconst addTask = (task: () => Promise<void>) => {\n    const onFulfilled = () => new Promise<void>(resolve =>  resolve(task()));\n    currentPromise = currentPromise.then(onFulfilled, onFulfilled);\n};\n\nconst updateUserInfo = (id: string, info: Info) => {\n    if (getVertex(id)) {\n        getVertex(id).info = info;\n    }\n};\n\nconst insertFollowings = (id: string, followings: string[]) => {\n    followings.forEach(following => {\n        addEdge(id, following);\n    });\n    emitNodesAndLinks();\n};\n\nconst insertFollowers = (id: string, followers: string[]) => {\n    followers.forEach(follower => {\n        addEdge(follower, id);\n    });\n    emitNodesAndLinks();\n};\n\nconst loadUserFollowing = async (id: string, depth: number) => {\n    const {\n        apiGetInfo,\n        apiGetFollowings,\n        apiGetFollowers,\n    } = getUserApi(id);\n    if (getVertex(id)?.info) {\n        return;\n    }\n    emitDescription(`加载 ${id}（你的 ${depth} 度好友）的信息`);\n    const info = await apiGetInfo();\n    initVertex(id);\n    updateUserInfo(id, info);\n    const prefixText = `加载 ${id}（你的 ${depth} 度好友）的好友列表`;\n    const followingsPage = Math.ceil(getVertex(id).info!.following / 100);\n\n    // 非本人，且关注了太多人的用户跳过\n    if (depth === 0 || followingsPage <= 100) {\n        for (let page = 1; page <= followingsPage; page++) {\n            emitDescription(`${prefixText}：followings ${page}/${followingsPage}`);\n            const followings = await apiGetFollowings(page);\n            insertFollowings(id, followings);\n        }\n    } else {\n        pushException(`没有加载 ${id} 的关注列表，关注了太多人`);\n    }\n\n    const followersPage = Math.ceil(getVertex(id).info!.followers / 100);\n\n    // 非本人，且关注者众多的用户跳过\n    if (depth === 0 || followersPage <= 10) {\n        for (let page = 1; page <= followersPage; page++) {\n            emitDescription(`${prefixText}：followers ${page}/${followersPage}`);\n            const followers = await apiGetFollowers(page);\n            insertFollowers(id, followers);\n        }\n    } else {\n        pushException(`没有加载 ${id} 的关注者列表，被太多人关注`);\n    }\n\n    if (depth <= 1) {\n        const friends = getFriends(id);\n        for (let i = 0; i < friends.length; i++) {\n            const friend = friends[i];\n            const friendId = friend.getKey();\n            addTask(() => loadUserFollowing(friendId, depth +  1));\n        }\n    }\n};\n\nexport const start = async (token: string) => {\n    const me = await getMeInfo(token);\n    const currentId = me.login;\n    setCurrentId(currentId);\n\n    addTask(() => loadUserFollowing(currentId, 0));\n};\n","import {Category, Link, Node} from '../types';\n\nconst categories: Category[] = [\n    'me',\n    'friend',\n    'friend-friend+follower',\n    'friend-friend',\n    'friend-friend-friend+follower',\n    'friend-friend-friend',\n    'friend-following+follower'\n];\n\nexport const getOptions = (nodes: Node[], links: Link[]) => {\n    const option = {\n        series: [{\n            type: 'graph',\n            layout: 'force',\n            animation: false,\n            label: {\n                position: 'right',\n                formatter: '{b}'\n            },\n            draggable: true,\n            data: nodes,\n            categories: categories.map(name => ({name})),\n            force: {\n                edgeLength: 50,\n                repulsion: 20,\n                gravity: 0.2\n            },\n            edges: links\n        }]\n    };\n    return option;\n};\n","import {useRef, useLayoutEffect, useEffect, FC} from \"react\";\nimport {init, EChartsType} from 'echarts';\nimport {Node, Link} from '../types';\nimport {getOptions} from \"./getOptions\";\nimport c from './Graph.module.css';\n\nlet chart: EChartsType | null = null;\n\ninterface Props {\n    nodes: Node[];\n    links: Link[];\n}\n\nconst Graph: FC<Props> = ({nodes, links}) => {\n    const ref = useRef<HTMLDivElement>(null);\n    useLayoutEffect(\n        () => {\n            if(ref.current) {\n                chart = init(ref.current, {\n                    color: [\n                        '#5470c6',\n                        '#ee6666',\n                        '#73c0de',\n                        '#91cc75',\n                        '#fac858',\n                        '#cccccc',\n                        '#fc8452'/* ,\n                        '#9a60b4',\n                        '#ea7ccc' */\n                    ],\n                })\n            }\n        },\n        []\n    );\n\n    useEffect(\n        () => {\n            if(chart) {\n                const options = getOptions(nodes, links);\n                chart.setOption(options)\n            }\n        },\n        [nodes, links]\n    );\n\n    return <div className={c.container} ref={ref} />\n};\n\nexport default Graph;\n","import React, {FC, useCallback, useEffect, useState} from 'react';\nimport {createLocalStorageRegion} from 'region-core';\nimport {start} from './region';\nimport {\n    useOption,\n    handleFollowChange,\n    handleMoreThanOneChange,\n    handleShowFriendFriendChange,\n    handleShowFriendFriendFriendChange,\n    useCurrentId\n} from './region/utils';\nimport {useNodesAndLinks} from './region/nodesAndLinks';\nimport Graph from \"./echarts/Graph\";\nimport c from './App.module.css';\nimport {useDescription} from \"./region/description\";\nimport {useExceptions} from \"./region/exception\";\n\nconst tokenRegion = createLocalStorageRegion('token', '')\n\nconst setToken = tokenRegion.set;\n\nconst useToken = tokenRegion.useValue;\n\ninterface PropsId {\n    id: string\n}\n\nconst Main: FC<PropsId> = () => {\n    const [nodes, links] = useNodesAndLinks();\n    return (\n        <Graph nodes={nodes} links={links} />\n    );\n};\n\nconst StartMenu = () => {\n    const [value, setValue] = useState('');\n    const handleChange = useCallback(\n        (e: any) => {\n            setValue(e.target.value)\n        },\n        []\n    );\n    const handleClick = useCallback(\n        () => {\n            setToken(value);\n        },\n        [value]\n    );\n    const handleEnter = useCallback(\n        (e) => {\n            if (e.code === 'Enter' || e.code === 'NumpadEnter') {\n                handleClick()\n            }\n        },\n        [handleClick]\n    );\n    return (\n        <Line>\n            <input placeholder=\"输入 token\" value={value} onChange={handleChange} onKeyDown={handleEnter} />\n            <span className={c.button} onClick={handleClick}>开始</span>\n            <a className={c.link} href=\"https://github.com/settings/tokens/new\" target=\"_blank\" rel=\"noreferrer noopener\">?</a>\n            <span className={c.tip}>此 token 仅用于获取开放的用户信息，请选择 user 标签以及其下的项</span>\n        </Line>\n    )\n};\n\nconst Description: FC<PropsId> = ({id}) => {\n    const description = useDescription();\n    return <div className={c.description}>{description}</div>\n};\n\nconst Line: FC<{className?: string}> = ({className, children}) => {\n    return <div className={className ? `${c.line} ${className}` : c.line}>{children}</div>;\n};\n\nconst App = () => {\n    const option = useOption();\n    const currentId = useCurrentId();\n    const token = useToken();\n    const exceptions = useExceptions();\n\n    useEffect(\n        () => {\n            if(token) {\n                start(token);\n            }\n        },\n        [token]\n    );\n\n    return (\n        <>\n            {currentId && <Main id={currentId} />}\n            <div className={c.context}>\n                {currentId ? (\n                    <>\n                        <Line><Description id={currentId} /></Line>\n                        <Line>\n                            <input\n                                type=\"checkbox\"\n                                id=\"follow\"\n                                disabled={option.showFriendFriend}\n                                checked={option.follow}\n                                onChange={handleFollowChange}\n                            />\n                            <label htmlFor=\"follow\">显示关注我的二度好友</label>\n                        </Line>\n                        <Line>\n                            <input\n                                type=\"checkbox\"\n                                id=\"moreThanOne\"\n                                disabled={option.showFriendFriend}\n                                checked={option.moreThanOne}\n                                onChange={handleMoreThanOneChange}\n                            />\n                            <label htmlFor=\"moreThanOne\">显示有两个共同好友的二度好友</label>\n                        </Line>\n                        <Line>\n                            <input\n                                type=\"checkbox\"\n                                id=\"all\"\n                                disabled={option.showFriendFriendFriend}\n                                checked={option.showFriendFriend}\n                                onChange={handleShowFriendFriendChange}\n                            />\n                            <label htmlFor=\"all\">显示所有二度好友</label>\n                        </Line>\n                        <Line>\n                            <input\n                                type=\"checkbox\"\n                                id=\"all\"\n                                disabled={!option.showFriendFriend}\n                                checked={option.showFriendFriendFriend}\n                                onChange={handleShowFriendFriendFriendChange}\n                            />\n                            <label htmlFor=\"all\">显示所有三度好友</label>\n                        </Line>\n                        {exceptions.length > 0 && (\n                            <Line className={c.hoverIcon}>?</Line>\n                        )}\n                        {exceptions.map(message => (\n                            <Line className={c.hoverLine}>\n                                {message}\n                            </Line>\n                        ))}\n                    </>\n                ) : (\n                    <StartMenu />\n                )}\n            </div>\n        </>\n    );\n};\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}